#Parameters
region=eastus
rg=lab-svh-avs # set your Resource Group
vwanname=svh-avs # vWAN name
hubname=svhub # vHub name
username=azureuser # Username
password="Msft123Msft123" # Please change your password
vmsize=Standard_B1s # VM Size
firewallsku=Premium #Azure Firewall SKU Standard or Premium

#ExpressRoute specific variables
ername1="lab-svh-avs-er-circuit" 
perloc1="Chicago"
providerloc1=Megaport
ername2="lab-svh-onprem-er-circuit"
perloc2="Dallas"
providerloc2=Megaport

#Create ER circuits
echo Creating ExpressRoute Circuits
az network express-route create --bandwidth 50 -n $ername1 --peering-location "$perloc1" -g $rg --provider $providerloc1 -l $region --sku-family MeteredData --sku-tier Standard -o none &>/dev/null &
az network express-route create --bandwidth 50 -n $ername2 --peering-location "$perloc2" -g $rg --provider $providerloc2 -l $region --sku-family MeteredData --sku-tier Standard -o none &>/dev/null &

# Validating Circuits Provider privisionaing status:
echo Validating Circuits Provider privisionaing status...
# $ername1
if  [ $(az network express-route show -g $rg --name $ername1 --query serviceProviderProvisioningState -o tsv) == 'Provisioned' ]; then
 echo "$ername1=Provisioned"
else
 echo $(az network express-route show -g $rg --name $ername1 --query serviceProviderProvisioningState -o tsv)
 echo "Please proceeed with the ER Circuit $ername1 provisioning with your Service Provider before proceed"
fi
echo Validating Circuits Provider privisionaing status...
# $ername2
if  [ $(az network express-route show -g $rg --name $ername2 --query serviceProviderProvisioningState -o tsv) == 'Provisioned' ]; then
 echo "$ername2=Provisioned"
else
 echo $(az network express-route show -g $rg --name $ername2 --query serviceProviderProvisioningState -o tsv)
 echo "Please proceeed with the ER Circuit $ername2 provisioning with your Service Provider before proceed"
fi

# Connect vuhb1 to ErCircuit1
echo connecting vuhb1 to $ername1
peering1=$(az network express-route show -g $rg --name $ername1 --query peerings[].id -o tsv)
routetableid=$(az network vhub route-table show --name defaultRouteTable --vhub-name $hubname -g $rg --query id -o tsv)
az network express-route gateway connection create --name connection-to-$ername1 -g $rg --gateway-name $hubname-ergw --peering $peering1 --associated-route-table $routetableid  --propagated-route-tables $routetableid --labels default &>/dev/null &

echo Validating ER circuits connection to the Gateway
prState=''
while [[ $prState != 'Succeeded' ]];
do
    prState=$(az network express-route gateway connection show --name connection-to-$ername1 -g $rg --gateway-name $hubname-ergw --query 'provisioningState' -o tsv)
    echo "ER connection connection-to-$ername1 provisioningState="$prState
    sleep 5
done

# Connect vuhb1 to ErCircuit2
echo connecting vuhb1 to $ername2
peering1=$(az network express-route show -g $rg --name $ername2 --query peerings[].id -o tsv)
routetableid=$(az network vhub route-table show --name defaultRouteTable --vhub-name $hubname -g $rg --query id -o tsv)
az network express-route gateway connection create --name connection-to-$ername2 -g $rg --gateway-name $hubname-ergw --peering $peering1 --associated-route-table $routetableid  --propagated-route-tables $routetableid --labels default &>/dev/null &

echo Validating ER circuits connection to the Gateway
prState=''
while [[ $prState != 'Succeeded' ]];
do
    prState=$(az network express-route gateway connection show --name connection-to-$ername1 -g $rg --gateway-name $hubname-ergw --query 'provisioningState' -o tsv)
    echo "ER connection connection-to-$ername1 provisioningState="$prState
    sleep 5
done